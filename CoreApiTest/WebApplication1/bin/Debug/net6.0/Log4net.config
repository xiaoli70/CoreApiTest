<?xml version="1.0" encoding="utf-8"?>
<log4net>
	<!-- 将日志以回滚文件的形式写到文件中 -->
	<!-- 按日期切分日志文件，并将日期作为日志文件的名字 -->
	<appender name="RollingFileAppenderNameByDate" type="log4net.Appender.RollingFileAppender">
		<!-- 日志文件存放位置，可以为绝对路径也可以为相对路径 -->
		<file value="Logs\\" />
		<!-- 将日志信息追加到已有的日志文件中-->
		<appendToFile value="true" />
		<!-- 最小锁定模式，以允许多个进程可以写入同一个文件 -->
		<lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
		<!-- 指定按日期切分日志文件 -->
		<rollingStyle value="Date" />
		<!-- 日志文件的命名规则 -->
		<datePattern value="&quot;TestLogs_&quot;yyyyMMdd&quot;.log&quot;" />
		<!-- 当将日期作为日志文件的名字时，必须将staticLogFileName的值设置为false -->
		<staticLogFileName value="false" />
		<!-- 日志显示模板 -->
		<layout type="log4net.Layout.PatternLayout">
			<conversionPattern value="【异常时间】：%date %newline%message%newline--------------------------------------------------------------------%newline" />
		</layout>
	</appender>
	
<appender name="AdoNetAppender_SQLServer" type="log4net.Appender.AdoNetAppender">

	<bufferSize value="1"/>

<connectionType value="System.Data.SqlClient.SqlConnection,System.Data.SqlClient, Version=4.6.1.3, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
			<connectionString value="Data Source=ZEROTPC003\MSSQLSERVER2022;Initial Catalog=MyFristDB; User ID=sa;Password=sa123456;"/>

 <commandText value="INSERT INTO Log ([Date],[Thread],[Level],[Logger],[Message],[Exception],[UserName]) VALUES (@log_date, @thread, @log_level, @logger, @message, @exception,@UserName)" />

			<parameter>

				<parameterName value="@log_date"/>

				<dbType value="DateTime"/>

				<layout type="log4net.Layout.RawTimeStampLayout"/>

			</parameter>

			<parameter>

				<parameterName value="@thread"/>

				<dbType value="String"/>

				<size value="255"/>

				<layout type="log4net.Layout.PatternLayout">

					<conversionPattern value="%thread"/>

				</layout>

			</parameter>

			<parameter>

				<parameterName value="@log_level"/>

				<dbType value="String"/>

				<size value="50"/>

				<layout type="log4net.Layout.PatternLayout">

					<conversionPattern value="%level"/>

				</layout>

			</parameter>

			<parameter>

				<parameterName value="@logger"/>

				<dbType value="String"/>

				<size value="255"/>

				<layout type="log4net.Layout.PatternLayout">

					<conversionPattern value="%logger"/>

				</layout>

			</parameter>

			<parameter>

				<parameterName value="@message"/>

				<dbType value="String"/>

				<size value="4000"/>

				<layout type="log4net.Layout.PatternLayout">

					<conversionPattern value="%message"/>

				</layout>

			</parameter>

	
			<parameter>

				<parameterName value="@exception"/>

				<dbType value="String"/>

				<size value="2000"/>

				<layout type="log4net.Layout.ExceptionLayout"/>

			</parameter>
			<parameter>

				<parameterName value="@UserName"/>

				<dbType value="String"/>

				<size value="100"/>

				<layout type="log4net.Layout.PatternLayout">

				<conversionPattern value="%property{UserName}"/>

				</layout>

			</parameter>
		</appender>

	<root>
		<!-- 控制级别，由低到高：ALL|DEBUG|INFO|WARN|ERROR|FATAL|OFF -->
		<!-- 比如定义级别为INFO，则INFO级别向下的级别，比如DEBUG日志将不会被记录 -->
		<!-- 如果没有定义LEVEL的值，则缺省为DEBUG -->
		<priority value="ALL"/>

<level value="INFO"/>
<appender-ref ref="RollingFileAppenderNameByDate" />
<appender-ref ref="AdoNetAppender_SQLServer" />
</root>
</log4net>